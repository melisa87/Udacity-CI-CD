version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          command: |
            aws cloudformation delete-stack --stack-name prod-${CIRCLE_WORKFLOW_ID}

jobs:
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Ensure backend infrastructure exist
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name prod-${CIRCLE_WORKFLOW_ID} --debug
          when: on_fail
          
      - destroy_environment

  #Create job that modifies CloudFront Distro origin bucket to the new bucket
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          aws cloudformation deploy --template-file bucket.yml --stack-name "my-stack-${CIRCLE_WORKFLOW_ID:0:7}" --parameter-overrides NAME=${CIRCLE_WORKFLOW_ID:0:7}

      - run: aws s3 sync . s3://"${CIRCLE_WORKFLOW_ID:0:7}" --delete
      #aws s3 sync . s3://test-${CIRCLE_WORKFLOW_ID:0:7}

  #Create job that gets previous pipeline
  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: 
          yum install -y tar gzip
      - run:
          aws cloudformation list-exports --query "Exports[?Name==\`PipelineID\`].Value"  --no-paginate --output text >> myfile.txt
      - run:
          OldPipelineID = $(cat myfile.txt)

      - persist_to_workspace:
          root: ~/
          paths:
            - project

  #Create job that kills old bucket and stack
  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: 
          yum install -y tar gzip
      - attach_workspace:
          at: ~/project
      - run:
          aws s3 rm "s3://${OldPipelineID}" --recursive
      - run:
          aws cloudformation delete-stack --stack-name "${PreviousPipelineID}"

  promote_to_production:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name cloudfront \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID:0:7}"

workflows:
  my_workflow:
    jobs:
    #  - create_and_deploy_front_end
     # - promote_to_production:
      #    requires:
       #     - create_and_deploy_front_end
      - get_last_deployment_id
        #  requires:
         #   - promote_to_production
      - clean_up_old_front_end:
          requires:
            - get_last_deployment_id

      
     
     
